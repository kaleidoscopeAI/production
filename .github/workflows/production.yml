# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
            - name: Upload a Build Artifact

              - name: Cache
              - name: Use Depot
  # You may pin to the exact commit or the version.
  # uses: depot/use-action@90146d58d088d969746f73da293453f402eeee13
  uses: depot/use-action@v1.2.0
  with:
    # Version of the Depot CLI to install. If unspecified or set to "latest",
the latest version for the target platform will be installed. Example: "0.0.2".
    version: # optional, default is latest
    # If set, will populate the `DEPOT_PROJECT_ID` environment variable.
    project: # optional, default is 
    # If set, will populate the `DEPOT_TOKEN` environment variable.
    token: # optional, default is 
          
  
  
  
  
  uses: actions/cache@v4.2.0
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
                   - name: Setup Node.js environment
  uses: actions/setup-node@v4.2.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                     - name: Jest Coverage Badges AWS
  # You may pin to the exact commit or the version.
  # uses: LPMendoza/jest-badges-aws@8390ae6108d1ec071124564f4eb6289b10118dce
  uses: LPMendoza/jest-badges-aws@v1.0.2
  with:
    # Path where your coverage-summary is located
    coverage-path: # optional
    # Name of the bucket where the badges will be located
    aws-bucket: 
    # Name of the folder/key in the bucket where the badges will be located
    aws-bucket-folder: 
                   - name: Minify and Deploy to CloudFront
  # You may pin to the exact commit or the version.
  # uses: Venkatesh-KCET/minify-action@6ad96468966e3186b206c2bc707df738c548d96c
  uses: Venkatesh-KCET/minify-action@v1.0.0
                   - name: Run taskcat
  # You may pin to the exact commit or the version.
  # uses: cormac-yobota/action-taskcat@cd65b04e63fe0a23e0dbe806584ec3d0fd7a8d90
  uses: cormac-yobota/action-taskcat@0.1.0
  with:
    # Command, subcommands, and arguments to pass to taskcat. Should be
formatted as "[args] <command> [args] [subcommand] [args]". The taskcat
invocation itself is already handled by the action-no need to prefix the
command with "taskcat".

    commands: 
    # If set to "true", this action will update taskcat its the latest version
before running tests.

    update_taskcat: # optional
    # If set to "true", this action will update cfn-lit to its latest version
before running tests.

    update_cfn_lint: # optional
                    
              - name: Execute-CfnGuardRegistry
  # You may pin to the exact commit or the version.
  # uses: davidhessler/execute-cfn-guard-registry@c5291d4f00698202398b96bf4d412bf3e7c2e2fd
  uses: davidhessler/execute-cfn-guard-registry@v1.0.1
  with:
    # The Amazon S3 Bucket where the CloudFormation Guard Registry rules are stored
    RuleRegistryBucket: 
    # The name of the rule set you would like to execute
    RuleSetName: 
    # The version of the rule set.  May either be a semver version or latest
    Version: 
    # The path where CloudFormation Templates are stored
    CloudFormationPath: # optional, default is .
    # The output format for CloudFormation Guard.  Valid options are SINGLE_LINE_SUMMARY or JSON.  default is JSON
    OutputFormat: # optional, default is JSON
    # Enable debug logging
    Debug: # optional
          
  uses: actions/upload-artifact@v4.6.0
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
    # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.

    include-hidden-files: # optional, default is false
          
